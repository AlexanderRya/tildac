fn pow(i64 base, i64 exp) -> i64 {
    i64 v = 1;
    for(i64 i = 0; i < exp; ++i) {
        v *= exp;
    }
    return v;
}

fn mul(f32 a, f32 b) -> f32 {
    return a * b;
}

fn should_crash() -> bool {
    return false;
}

fn main(i64 argc, c8[] argv) -> i64 {
    print("% %", pow(4, 11), mul(5.5, 1.1));
    if should_crash() {
        while true {
            // We pretend we crash by never returning
            we_pretend_we_crashed_by_never_returning_but_its_a_function();
            /* The line below tells lies */
            the_line_above_is_true();
            /* multiline drifting
             * more comment
             * and more
             * and more * /
             */function_call();
        }
    }
    return false;
}
